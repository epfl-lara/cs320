object BasicBranching

	def less(a: Int(32), b: Int(32)): Boolean = {
		a < b
	}

	def lessOrEqual(a: Int(32), b: Int(32)): Boolean = {
		a <= b
	}

	def test1(): Unit = {
		val a: Int(32) = 1;
		val b: Int(32) = a + 1;
		if(less(a, b)) {
			Std.printString("correct")
		} else {
			Std.printString("not correct")
		}
	}

	def test2(): Unit = {
		val a: Int(32) = 1;
		val b: Int(32) = a + 1;
		if(less(a, 1)) {
			Std.printString("correct")
		} else {
			Std.printString("not correct")
		}
	}

	def test3(): Unit = {
		val a: Int(32) = 1;
		val b: Int(32) = a + 1;
		if(less(b, a)) {
			Std.printString("correct")
		} else {
			Std.printString("not correct")
		}
	}

	def test4(): Unit = {
		val a: Int(32) = 1;
		val b: Int(32) = a + 1;		
		if(lessOrEqual(a, a)) {
			Std.printString("correct")
		} else {
			Std.printString("not correct")
		}		
	}

	def test(): Unit = {
		val a: Int(32) = 1;
		val b: Int(32) = a + 1;
		if(less(a, b)) {
			Std.printString("correct")
		} else {
			Std.printString("not correct")
		};

		if(less(a, 1)) {
			Std.printString("correct")
		} else {
			Std.printString("not correct")
		};

		if(less(b, a)) {
			Std.printString("correct")
		} else {
			Std.printString("not correct")
		};

		if(lessOrEqual(a, a)) {
			Std.printString("correct")
		} else {
			Std.printString("not correct")
		}
	}

	test();

	Std.printString("test finished")
end BasicBranching
